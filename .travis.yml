language: c

matrix:
  include:
    - os: linux
      env: PYTHON_VERSION=2.7
    - os: linux
      env: PYTHON_VERSION=3.5
    # - os: linux
    #   env: PYTHON_VERSION=3.6
    # - os: linux
    #   env: PYTHON_VERSION=3.4
    # PyASDF install has issues on 3.4
    #    - os: linux
    #      env: PYTHON_VERSION=3.3
    # There isn't and openCV3 for python 3.3 on Conda

    - os: osx
      env: PYTHON_VERSION=2.7
    - os: osx
      env: PYTHON_VERSION=3.5

sudo: false

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OS="MacOSX";
      export py=$PYTHON_VERSION;
    else
      export OS="Linux";
      export py=$PYTHON_VERSION;
    fi
  - if [[ "$py" == "2.7_with_system_site_packages" ]]; then
      export py="2.7";
    fi
  - if [[ "${py:0:1}" == '2' ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-${OS}-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-${OS}-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels menpo
  - conda config --add channels conda-forge
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - |
      if [[ "${py:0:1}" == "3" ]]; then
        env_file="misc/py35_test_env.lis"
        PYFLAKES="pyflakes=1.0.0"
      else
        env_file="misc/py2_test_env.lis"
        PYFLAKES="pyflakes=0.9.0"
      fi
  - echo $PYTHON_VERSION
  - conda create -q -n test-environment python=$PYTHON_VERSION colorama numpy scipy matplotlib obspy flake8 mock coverage opencv3 bottleneck
  - source activate test-environment
  - conda install $PYFLAKES
  - conda install pyproj
  - conda install h5py
  - pip install coveralls
  - pip install geographiclib
  - pip install https://github.com/SeismicData/pyasdf/archive/master.zip
  - python -c "import pyasdf; pyasdf.print_sys_info()"
  - pip install https://github.com/megies/PyImgur/archive/py3.zip
  - pip install pep8-naming
  - pip install pytest pytest-cov pytest-pep8 pytest-xdist
  - pip install codecov
  - pip install Cython
  - pip freeze
  - conda list
  # done installing dependencies
  - git version
  - python setup.py install

script:
#  - python eqcorrscan/tests/match_filter_test.py
#  - travis_wait 50 python setup.py test
   - python setup.py test
#   - py.test --ignore=../eqcorrscan/tests/tutorial_test.py

after_success:
  # Check how much code is actually tested and send this report to codecov
  - ls -a
  - mv .coverage ../.coverage.empty
  - cd ..
  - coverage combine
  - codecov

notifications:
    email: false
    webhooks:
      urls:
        - https://webhooks.gitter.im/e/b964418fdb22a8840c58
      on_success: change  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: never     # options: [always|never|change] default: always
