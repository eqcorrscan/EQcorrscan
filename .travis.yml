language: c

addons:
  apt:
    packages:
      libfftw3-dev

matrix:
  include:
    - os: linux
      env: PYTHON_VERSION=2.7 MKL=0
    - os: linux
      env: PYTHON_VERSION=3.5 MKL=0
    - os: linux
      env: PYTHON_VERSION=3.6 MKL=0
    - os: linux
      env: PYTHON_VERSION=3.6 MKL=1

    - os: osx
      osx_image: xcode8
      env:
        - PYTHON_VERSION=3.5 MKL=0

sudo: false

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OS="MacOSX";
      export py=$PYTHON_VERSION;
      brew update;
      brew install gcc6;
      export CC=gcc-6;
      export CXX=g++-6;
      brew install fftw;
      brew list;
    else
      export OS="Linux";
      export py=$PYTHON_VERSION;
    fi
  - if [[ "$py" == "2.7_with_system_site_packages" ]]; then
      export py="2.7";
    fi
  - if [[ "${py:0:1}" == '2' ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-${OS}-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-${OS}-x86_64.sh -O miniconda.sh;
    fi
  - export OMP_NUM_THREADS=1;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda info -a
  - |
      if [[ "${py:0:1}" == "3" ]]; then
        PYFLAKES="pyflakes=1.0.0"
      else
        PYFLAKES="pyflakes=0.9.0"
      fi
  - echo $PYTHON_VERSION
  - conda create -q -n test-environment python=$PYTHON_VERSION colorama numpy scipy matplotlib obspy flake8 mock coverage bottleneck pyproj
  - source activate test-environment
  - conda install h5py
  - if [ "$MKL" == "1" ]; then conda install -q mkl mkl-include; fi
  - pip install pep8-naming pytest pytest-cov pytest-pep8 pytest-xdist pytest-rerunfailures codecov Cython
  - pip freeze
  - conda list
  # done installing dependencies
  - git version
  - python setup.py install
  - python setup.py build_ext --inplace

script:
   - py.test --runslow -m "not serial and not network" -n 2
   - py.test -m "serial and not network" --cov-append
   - py.test --runsuperslow -s eqcorrscan/tests/tutorials_test.py::TestTutorialScripts::test_subspace --cov-append
#   - py.test -m "network" --cov-append -n 2

after_success:
  # Check how much code is actually tested and send this report to codecov
  - ls -a
  - mv .coverage ../.coverage.empty
  - cd ..
  - coverage combine
  - codecov

notifications:
    email: false
    webhooks:
      urls:
        - https://webhooks.gitter.im/e/b964418fdb22a8840c58
      on_success: change  # options: [always|never|change] default: always
      on_failure: always  # options: [always|never|change] default: always
      on_start: never     # options: [always|never|change] default: always
